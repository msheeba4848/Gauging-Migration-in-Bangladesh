---
title: "Data 2"
format: html
editor: visual
---

```{r}
library(caret)
df_original <- read.csv('../cleaned_data/cleaning_data-02.csv')
df <- replace(df, is.na(df), 99999)
df <- df[, c(-1,-2,-3,-4,-9)]
#df <- as.data.frame(lapply(df, as.factor))
print(head(df))

```


# Model 1
Independent Variable
D1A_1V1L: Internal: Primary purpose of trip: work/earn money - Last, Head


Dependent Variable
A12: Household: Can you write a letter?
A13: Household: Level of education (Highest level passed)
A14: Household: Livelihood/occupation
D1A_6AL: Internal: District of destination - Last, Head
D1A_7ML: Internal: Month of arrival - Last, Head
A15V1: Household: Have migration experience?: Internal
-- not in cleaned data? A15V2: Household: Have migration experience?: India
-- not in cleaned data? A15V3: Household: Have migration experience?: Other country
A15V4: Household: Have migration experience?: No migration




```{r}
df2 <-df_original[, c("D1A_1V1L", "A12", "A13", "A14", "D1A_7ML", "A15V1", "A15V4")]
# temporarily taking out D1A_6AL

#converting cateogorical variables to factor
df2 <- as.data.frame(lapply(df2, factor))
print(head(df2))
```

```{r}
# converting variables to dummy variables
library("fastDummies")
df2 <- fastDummies::dummy_cols(df2)
print(dim(df2))
```

```{r}
# removing rows that do not have D1A_1V1L
df2 <- df2[!is.na(df2$D1A_1V1L), ]
# Dropped duplicate columns that we made into dummy variables already
df2 <- df2[, -which(names(df2) %in% c("D1A_1V1L_1", "D1A_1V1L_0", "D1A_1V1L_NA", "A12_2", "A12", "A13", "A14", "D1A_7ML", "A15V1", "A15V4"))]
#replace NA with 0, 0 meaning "No", assuming that if the participant did not say yes to a question, than it would be no.
df2 <- replace(df2, is.na(df2), 0)
print(head(df2))
```
```{r}
# INSERT CODE 

set.seed(123) # for reproducibility
train_idx <- createDataPartition(df2$D1A_1V1L, p = 0.8, list = FALSE)
train <- df2[train_idx,]
test <- df2[-train_idx,] 
```

```{r}

#trying a logistic regression
model <- glm(D1A_1V1L ~ ., data = df2, family = binomial)

# look at summary of logistic regression model
(summary2_lm <- summary(model))
```
```{r}

# Create model with predictors found from linear model
model2 <- glm(D1A_1V1L ~ A14_8 + A14_9 + A14_17 + D1A_7ML_9, data = train, family = binomial)

# Make predictions on test data
predictions <- predict(model2, newdata = test, type = "response")

# Convert probabilities to class labels, assign greater than 0.5 to Positive
pred_classes <- ifelse(predictions > 0.5, "Positive", "Negative")

# Create the confusion matrix
cm <- table(Actual = test$D1A_1V1L, Predicted = pred_classes)

# Confusion Matrix
print(cm)
```

```{r}
# Calculate True Positives (TP), True Negatives (TN), False Positives (FP), False Negatives (FN)
TP <- 333
TN <- 20
FP <- 43
FN <- 3

# Calculate accuracy
accuracy <- (TP + TN) / sum(cm)

# Calculate precision
precision <- TP / (TP + FP)

# Calculate recall (also called sensitivity)
recall <- TP / (TP + FN)

# Calculate F1 score
F1 <- 2 * (precision * recall) / (precision + recall)

# Print the metrics
cat("Accuracy:", accuracy, "\n")
cat("Precision:", precision, "\n")
cat("Recall:", recall, "\n")
cat("F1 Score:", F1, "\n")

```
## Regsubset - Attempt

```{r}
# INSERT CODE 
library(leaps)

model1 <- regsubsets(D1A_1V1L ~ A14_8 + A14_9 + A14_17 + D1A_7ML_9, data = df2, nvmax = 71, method = "exhaustive")

summary(model1)

results1 <- summary(model1)

results1$adjr2
results1$cp
results1$bic


data.frame(
  Adj.R2 = which.max(results1$adjr2),
  CP = which.min(results1$cp),
  BIC = which.min(results1$bic)
)
```



## Feature Selection/Interesting Findings

Results:
A14_8       -1.747e+00  8.781e-01  -1.989   0.0467 *  
A14_9        2.309e+00  9.075e-01   2.544   0.0110 * 
A14_17      -2.934e+00  6.180e-01  -4.747 2.06e-06 ***
D1A_7ML_9    1.268e+00  6.034e-01   2.101   0.0356 * 

Descriptions Mapped:
A14_8: Domestic servant
A14_9: Non agricultural worker(factory worker, blue collar service)
A14_17: Homemaker
D1A_7ML_9: D1A_7ML: Internal: Month of arrival - Last, Head - Month 9/September
  *** could we also do year??
  
Conclusion:
These predictors may have a relationship to D1A_1V1L: Internal: Primary purpose of trip: work/earn money - Last, Head.



# Model 2

Independent Variable
D1A_1V1L: Internal: Primary purpose of trip: work/earn money - Last, Head


Dependent Variable
-- numeric D1A_4: Internal: Total number of trips - Head
-- numeric A08: Household: Year of birth
    converted to Age
-- numeric N1_6TAKA: Internal: How much paid in taka?
-- numeric A11Y: Household: Age at first marriage

```{r}
df2 <-df_original[, c("D1A_1V1L", "D1A_4", "A08", "A11Y" ,"N1_6TAKA")]
print(head(df2))
```
```{r}
df2 <- df2[!is.na(df2$D1A_1V1L), ]
df2 <- na.omit(df2)
df2$Age <- 2019 - df2$A08
df2 <-df2[, c("D1A_1V1L", "D1A_4", "Age", "N1_6TAKA", "A11Y")]
print(head(df2))
print(dim(df2))
```
```{r}
model <- lm(D1A_1V1L ~ ., data = df2)

# look at summary of linear model
(summary2_lm <- summary(model))
```
## Feature Selection/Interesting Findings

Conclusion:
Number of trips predictor of primary purpose of trip to work/earn money

# Model 3

Independent Variables
D1A_1V9L: Internal: Primary purpose of trip: accompany family - Last, Head

Dependent Variable
A12: Household: Can you write a letter?
A13: Household: Level of education (Highest level passed)
A14: Household: Livelihood/occupation
D1A_6AL: Internal: District of destination - Last, Head
D1A_7ML: Internal: Month of arrival - Last, Head
A15V1: Household: Have migration experience?: Internal
-- not in cleaned data? A15V2: Household: Have migration experience?: India
-- not in cleaned data? A15V3: Household: Have migration experience?: Other country
A15V4: Household: Have migration experience?: No migration




```{r}
df2 <-df_original[, c("D1A_1V9L", "A12", "A13", "A14", "D1A_7ML", "A15V1", "A15V4")]
# temporarily taking out D1A_6AL
df2 <- as.data.frame(lapply(df2, factor))
print(head(df2))
```

```{r}
library("fastDummies")
df2 <- fastDummies::dummy_cols(df2)
print(dim(df2))
```

```{r}
df2 <- df2[!is.na(df2$D1A_1V9L), ]
# Drop specified columns from df2
df2 <- df2[, -which(names(df2) %in% c("D1A_1V9L_1", "D1A_1V9L_0", "D1A_1V9L_NA", "A12_2", "A12", "A13", "A14", "D1A_7ML", "A15V1", "A15V4"))]
df2 <- replace(df2, is.na(df2), 0)
print(head(df2))
```

```{r}
model <- glm(D1A_1V9L ~ ., data = df2, family=binomial)

# look at summary of linear model
(summary2_lm <- summary(model))
```


## Feature Selection/Interesting Findings
Not much different from Model 1


