---
title: "Dataset 1 analysis"
format: html
---

```{r}
library(randomForest)
library(caret)
library(stats)
library(glmnet)
library(ggplot2)
library(dplyr)
library(reshape2)
library(treemap)
options(warn = -1)
df <- read.csv("/Users/ishaanbabbar/dsan5300_project/new-cleaned_data-01.csv")

df <- df %>%
  rename(
    Household_num = HHNO,
    Business_ID = BEM_ID,
    Business_Year1 = E3A,
    Business_Year1_Closed = E4A,
    Internal_Migration_Year1 = G1_4S1,
    Natural_Disaster_Year1 = P10_2A,
    Land_Hold_Year1 = P1A_6A,
    Recent_Flood = P12_1,
    Flood_Depth = P12_2,
    Land_Hold_Unchanged = P4_2,
    Land_Hold_Location = P1A_7A1A,
    Internal_Migration_Expense = G1_5A1S1
  )


selected_df <- df %>% select(TMEM, P5_1, J2_1, J2_14, J1AB, T2, Q1_1, Q1_3, Q1_5, Q1_13)
selected_df[is.na(selected_df)] <- 0.01

selected_df <- selected_df %>%
  rename(
    Total_Household = TMEM,
    Land_Hold_Aquaculture = P5_1,
    Has_Light = J2_1,
    Has_Generator = J2_14,
    Use_Firewood = J1AB,
    Government_Effectiveness = T2,
    Temperature_Change = Q1_1,
    Rainfall_Change = Q1_3,
    Flood_Change = Q1_5,
    Fish_in_Water_Change = Q1_13
  )


df_plot <- melt(df)
treemap(df_plot, index = c("variable", "variable"), vSize = "value", title = "Dataset before Feature selection",  palette = "Blues")

selected_df_plot <- melt(selected_df)
treemap(selected_df_plot, index = c("variable", "variable"), vSize = "value", title = "Dataset after Feature selection",  palette = "Blues")

ggplot(selected_df_plot, aes(value)) +
  geom_histogram(binwidth = 0.5) +
  facet_wrap(~ variable, scales = "free") +
  labs(title = "Data after Feature Selection") + theme(plot.title = element_text(size = 20))

```

```{r}
# EDA analysis for feature selection 
corr_matrix <- cor(selected_df[, c("Total_Household", "Land_Hold_Aquaculture", "Has_Light", "Has_Generator", "Use_Firewood", "Government_Effectiveness", "Temperature_Change", "Rainfall_Change", "Flood_Change", "Fish_in_Water_Change")])

library(corrplot)
corrplot(corr_matrix, method = "color", type = "upper", tl.col = "black")

filtered_df <- selected_df %>%
  filter(Temperature_Change != 0.01 & Rainfall_Change != 0.01)

Q1_1_labels <- c("Decrease", "Increase", "No change", "Not Present")

# Convert Q1_1 to a factor with custom labels
filtered_df$Temperature_Change <- factor(filtered_df$Temperature_Change, levels = c(1,2,3,9) , labels = Q1_1_labels)

filtered_df$Rainfall_Change <- factor(filtered_df$Rainfall_Change, levels = c(1,2,3,9) , labels = Q1_1_labels)

ggplot(filtered_df, aes(x = factor(Temperature_Change), fill = factor(Rainfall_Change))) + geom_bar(position = "stack") + labs(x = "Temperature", y = "Responses", title = "Perceived Eniromental Change between Temperature and Rainfall") + scale_fill_discrete(name = "Raifall During other seasons") + theme_minimal()
```

```{r}
# Data frame based on the models created with RMSE, MAE, R_squared based on Y target variable Q1_1
# Tagret Variable: 
data <- data.frame(
  Model = c("Base Linear Regression (OLS)", "Ridge Regression", "Lasso Regression",
            "Elastic Net Regression", "Decision Tree (Base)", "Random Forest (Base)",
            "Decision Tree (Hyperparameter Tuned)", "Random Forest (Hyperparameter Tuned)",
            "Gradient Boosting", "XGBoost", "Stacked Model"),
  RMSE = c(0.3980601, 0.4172933, 0.4078301, 0.4064160, 0.3181162, 0.3253209,
           0.3181162, 0.3198989, 0.3203697, 0.3480966, 0.3189486),
  MAE = c(0.2771514, 0.2939489, 0.3019748, 0.2967684, 0.1313860, 0.1503552,
          0.1313860, 0.1409187, 0.1422168, 0.1797902, 0.1461091),
  R_squared = c(0.9470258, 0.9439985, 0.9462018, 0.9461558, 0.9661455, 0.9646005,
                0.9661455, 0.9657753, 0.9656845, 0.9595205, 0.9659662)
)
data_melted <- melt(data, id.vars = "Model")
data_melted1 <- data_melted[data_melted$variable != "R_squared", ]

# Determine the best model in the analysis
best_model <- data[which.min(data$RMSE), ]
best_model <- rbind(best_model, data[which.min(data$MAE), ])
best_model <- rbind(best_model, data[which.max(data$R_squared), ])

best_model <- unique(best_model)
best_model
```



```{r}
ggplot(data_melted[data_melted$variable == "R_squared", ], aes(x = Model, y = value, color = variable, group = variable)) +
  geom_point(size= 3, fill = "#E7943F") + scale_color_manual(values = c("#E7943F")) +
  labs(
    x = "Model",
    y = "R-squared",
    title = "R-squared Values for Different Models",
    color = "Metric"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom", axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))

```


```{r}
ggplot(data_melted1, aes(x = Model, y = value, color = variable, group = variable)) +
  geom_point(size = 3) +  scale_color_manual(values = c("#AC5448", "#635B4E")) +
  labs(
    x = "Model",
    y = "Value",
    title = "Model Performance Metrics for RMSE and MAE",
    color = "Metric"
  ) +
  theme_minimal()  +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), 
  )
```

```{r}
ggplot(data_melted1, aes(x = Model, y = value, fill = variable)) +
  geom_bar(stat = "identity", position = "identity", alpha = 0.7, color = NA) +
  labs(
    x = "Model",
    y = "Value",
    title = "Model Performance Metrics",
    fill = "Metric"
  ) +
  scale_fill_manual(values = c("RMSE" = "#E7943F", "MAE" = "#635B4E")) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), 
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(), 
  ) 

```

```{r}
ggplot(data_melted, aes(x = variable, y = Model, fill = value)) + 
geom_tile() + scale_fill_gradient(low = "#2D3740", high = "#E7943F") + 
theme_minimal() + labs(title = "Heatmap Metrics for Different Models", x = "Metrics", y = "Model", fill = "Value") + theme(element_line(color = "white"))
```

```{r}
ggplot(data_melted, aes(x = Model, y = value, fill = variable)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() + scale_fill_manual(values = c("#2D3740", "#F7D290", "#635B4E")) +
  facet_wrap(~ variable, scales = "free_y", ncol = 1) +
  labs(
    x = "Model",
    y = "Value",
    title = "Model Performance Metrics",
    fill = "Metric"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), 
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_line(color = "white"),   
  ) 
```

```{r}
X <- data.matrix(data[, c('RMSE', "R_squared")])
y <- data$MAE

lasso_model <- cv.glmnet(X, y, alpha = 1)
plot(lasso_model)

```

```{r}
X <- data.matrix(data[, c('MAE', "R_squared")])
y <- data$RMSE

lasso_model <- cv.glmnet(X, y, alpha = 1)
plot(lasso_model)
```